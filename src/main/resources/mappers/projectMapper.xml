<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="kr.co.dong.projectMapper">
  
   <!-- 리뷰작성 처리 -->	
	<insert id="review" parameterType="BoardsDTO">
		insert into boards(boards_title, boards_content, boards_userid, boards_regdate,
		boards_readcnt, boards_category, del, boards_productid)
		values(#{boards_title}, #{boards_content}, #{boards_userid}, curdate(), 0,1,0, #{boards_productid})
	</insert>
	
	<!-- 보드 테이블 마지막 튜플의 번호 조회 -->
	<select id="boardsNoLast" resultType="java.lang.Integer">
		select boards_no
		from boards
		order by boards_no desc
		limit 1;
	</select>
  
  <!-- 제품 등록 -->
  <insert id="productRegister" parameterType="ProductVO">
	insert into 
	product (product_id, product_name, product_price, product_content, product_category, product_remain, product_sales)
	values (#{product_id}, #{product_name}, #{product_price}, #{product_content}, #{product_category}, #{product_remain}, 0)
  </insert>
  
  <!-- 파일 업로드 -->
  <insert id="fileUpload" parameterType="FileVO">
	insert into 
	file (file_name, file_path, file_connection_id)
	values (#{file_name}, #{file_path}, #{file_connection_id})
  </insert>
  
  <!-- 파일 조회 -->
  <select id="fileSelect" parameterType="java.lang.String" resultType="java.lang.String">
	  select file_name
	  from file
	  where file_connection_id=#{product_id}
  </select>
  
  <!-- 제품 목록에서 대표 이미지 조회 -->
  <select id="listFileSelect" parameterType="java.lang.String" resultType="FileVO">
	  	WITH ranked_files AS (
		    SELECT 
		        file_name, 
		        file_connection_id, 
		        ROW_NUMBER() OVER (PARTITION BY file_connection_id ORDER BY file_name) AS rnk
		    FROM file
		    WHERE file_connection_id IN 	    
		    <foreach collection="array" item="productno" open="(" separator="," close=")">
	        	#{productno}
	    	</foreach>
		)
		SELECT *
		FROM ranked_files
		WHERE rnk = 1;
  </select>
  
   <!-- 검색 -->
   <select id="productSearch" parameterType="java.lang.String" resultType="ProductVO">
	  select *
	  from product
	  where product_name like concat('%',#{keyword},'%') and del = 0
	  order by product_id desc
  </select>
  
   <!-- 제품 상세페이지 -->
   <select id="productDetail" parameterType="java.lang.String" resultType="ProductVO">
	  select *
	  from product
	  where product_id = #{product_id}
   </select>
  
   <!-- 마이페이지 -->
   <select id="mypage" parameterType="java.lang.String" resultType="BuyVO">
	  select *
	  from buy
	  where buy_userid = #{userid}
   </select>
   
   <!-- 마이페이지 디테일 -->
   <select id="mypageDetail" parameterType="java.lang.Integer" resultType="BuyDetailVO">
	    select * 
	    from buydetail 
	    where buydetail_buyno in 
	    <foreach collection="array" item="buyno" open="(" separator="," close=")">
	        #{buyno}
	    </foreach>
	</select>
	
   <!-- 마이페이지 디테일 -->
   <select id="mypageDetailProduct" parameterType="java.lang.String" resultType="ProductVO">
	    select * 
	    from product 
	    where product_id in 
	    <foreach collection="array" item="productno" open="(" separator="," close=")">
	        #{productno}
	    </foreach>
	</select>
	
	<!-- 주소지 조회(get) -->
   <select id="addressManageSelect1" parameterType="java.lang.String" resultType="AddressVO">
	  select *
	  from address
	  where address_userid = #{userid}
   </select>
   
   	<!-- 주소지 수정(get) -->
   <select id="addressManageUpdate1" parameterType="java.lang.Integer" resultType="AddressVO">
	  select *
	  from address
	  where address_no = #{address_no}
   </select>
   
   <!-- 주소지 수정(post) -->
   <update id="addressManageUpdate2" parameterType="AddressVO">
	  update address
	  set address_name=#{address_name}, address_content=#{address_content}, address_main=#{address_main}
	  where address_no=#{address_no}
   </update>
   
   <!-- 주소지 추가(post) -->
   <insert id="addressManageAdd2" parameterType="AddressVO">
   		insert into address(address_userid, address_main, address_name, address_content)
		values (#{address_userid}, #{address_main}, #{address_name}, #{address_content});
   </insert>
   
   <!-- 메인 주소 초기화 -->
   <update id="addressManageMainReset">
		update address
		set address_main=0
		where address_main=1;
   </update>
   
   <!-- 주소지 삭제(get) -->
   <delete id="addressManageDelete1" parameterType="java.lang.Integer">
   	  delete from address
	  where address_no = #{address_no}
   </delete>

  </mapper>